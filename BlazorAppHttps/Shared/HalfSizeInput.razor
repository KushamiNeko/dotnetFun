<div class="mb-2 col-12 col-xl-6">
    <div class="d-flex align-items-center w-100">
        <div class="d-flex flex-wrap flex-row gx-2 w-100 align-items-center">
            <div class="col-12 col-md-8 pe-xl-2">
                <label class="col-form-label">@Label</label>
            </div>
            <div class="col pe-xl-3">

                @if (Type == "info")
                {
                    <div class="fs-6 text-white text-md-center">@Info</div>
                }
                else
                {
                    <input @oninput="OnValueChanged" class="form-control text-md-center" value="@Value" />
                }

            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string Info { get; set; }

    [Parameter]
    public string Type { get; set; }

    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public EventCallback ValueChangedListener { get; set; }

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        await ValueChanged.InvokeAsync(e.Value.ToString());

        if (ValueChangedListener.HasDelegate)
        {
            await ValueChangedListener.InvokeAsync(null);
        }
    }
}
@inject IJSRuntime js


<div class="d-flex my-3 my-md-0">
    <video @ref="_video" class="w-100" controls autoplay loop muted tabindex="-1" poster="black.png" controlslist="nodownload">
        <source src="@Source" type="video/mp4">
        <!-- fallback content here -->
    </video>
</div>

<div class="w-100 mt-0 mt-md-4">
    <DelayButton @ref="_delayButton" Title="戻る" DelaySeconds="@_delayDuration" CanceledCallBack="CanceledCallBack"
                 ActivatedCallBack="ActivatedCallBack">
    </DelayButton>
</div>

<div
    class="d-flex flex-row w-100 my-1 my-md-0 mt-md-2 px-1 px-md-0 text-white justify-content-between user-select-none fs-6">
    <span>一時停止 |</span>
    <span>少し戻る |</span>
    <span>最初に戻る |</span>
</div>


@code {
    private double _delayDuration = 1;

    private ElementReference _video;

    private DelayButton _delayButton;

    private bool _videoPaused = false;

    [Parameter]
    public string Source { get; set; }

    private async Task CanceledCallBack(double duration)
    {
        if ((duration >= _delayDuration / 2.0) && duration < _delayDuration)
        {
            await BackStepVideo();
        }
        else
        {
            if (!_videoPaused)
            {
                _videoPaused = true;
                await StopVideo();
            }
            else
            {
                _videoPaused = false;
                await PlayVideo();
            }
        }
    }

    private async Task ActivatedCallBack()
    {
        await RestartVideo();
    }

    public async Task KeyboardDown()
    {
        await _delayButton.KeyboardDown();
    }

    public async Task KeyboardUp()
    {
        await _delayButton.KeyboardUp();
    }

    public async Task ButtonMouseDown()
    {
        await _delayButton.ButtonMouseDown();
    }

    public async Task ButtonMouseUp()
    {
        await _delayButton.ButtonMouseUp();
    }

    public async Task LoadVideo()
    {
        _videoPaused = false;
        await js.InvokeVoidAsync("loadVideo", _video);
    }

    public async Task PlayVideo()
    {
        await js.InvokeVoidAsync("playVideo", _video);
    }

    public async Task StopVideo()
    {
        await js.InvokeVoidAsync("stopVideo", _video);
    }

    public async Task RestartVideo()
    {
        await js.InvokeVoidAsync("restartVideo", _video);
    }

    public async Task BackStepVideo()
    {
        await js.InvokeVoidAsync("backStepVideo", _video);
    }

}